"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContactCreate = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const material_1 = require("@mui/material");
const app_1 = require("../../app");
const Spacer = () => (0, jsx_runtime_1.jsx)(material_1.Box, { width: 20, component: "span" }, void 0);
const ContactCreate = (props) => ((0, jsx_runtime_1.jsx)(app_1.CreateBase, Object.assign({}, props, { transform: (data) => (Object.assign(Object.assign({}, data), { last_seen: new Date(), tags: [] })) }, { children: (0, jsx_runtime_1.jsx)(ContactCreateContent, {}, void 0) }), void 0));
exports.ContactCreate = ContactCreate;
const ContactCreateContent = () => {
    const { save, record } = (0, app_1.useCreateContext)();
    return ((0, jsx_runtime_1.jsx)(material_1.Box, Object.assign({ mt: 2, display: "flex" }, { children: (0, jsx_runtime_1.jsx)(material_1.Box, Object.assign({ flex: "1" }, { children: (0, jsx_runtime_1.jsx)(app_1.FormWithRedirect, { redirect: "show", record: record, save: save, render: formProps => ((0, jsx_runtime_1.jsxs)(material_1.Card, { children: [(0, jsx_runtime_1.jsx)(material_1.CardContent, { children: (0, jsx_runtime_1.jsx)(material_1.Box, { children: (0, jsx_runtime_1.jsxs)(material_1.Box, Object.assign({ display: "flex" }, { children: [(0, jsx_runtime_1.jsx)(material_1.Box, Object.assign({ mr: 2 }, { children: (0, jsx_runtime_1.jsx)(material_1.Avatar, {}, void 0) }), void 0), (0, jsx_runtime_1.jsxs)(material_1.Box, Object.assign({ flex: "1", mt: -1 }, { children: [(0, jsx_runtime_1.jsxs)(material_1.Box, Object.assign({ display: "flex" }, { children: [(0, jsx_runtime_1.jsx)(app_1.TextInput, { source: "first_name", validate: [(0, app_1.required)()] }, void 0), (0, jsx_runtime_1.jsx)(Spacer, {}, void 0), (0, jsx_runtime_1.jsx)(app_1.TextInput, { source: "last_name", validate: [(0, app_1.required)()] }, void 0)] }), void 0), (0, jsx_runtime_1.jsxs)(material_1.Box, Object.assign({ display: "flex" }, { children: [(0, jsx_runtime_1.jsx)(app_1.TextInput, { source: "title" }, void 0), (0, jsx_runtime_1.jsx)(Spacer, {}, void 0), (0, jsx_runtime_1.jsx)(app_1.ReferenceInput, Object.assign({ source: "company_id", reference: "companies" }, { children: (0, jsx_runtime_1.jsx)(app_1.AutocompleteInput, { optionText: "name" }, void 0) }), void 0)] }), void 0), (0, jsx_runtime_1.jsx)(material_1.Divider, {}, void 0), (0, jsx_runtime_1.jsx)(material_1.Box, Object.assign({ mt: 2, width: 430 }, { children: (0, jsx_runtime_1.jsx)(app_1.TextInput, { source: "email", fullWidth: true }, void 0) }), void 0), (0, jsx_runtime_1.jsxs)(material_1.Box, Object.assign({ display: "flex" }, { children: [(0, jsx_runtime_1.jsx)(app_1.TextInput, { source: "phone_number1" }, void 0), (0, jsx_runtime_1.jsx)(Spacer, {}, void 0), (0, jsx_runtime_1.jsx)(app_1.TextInput, { source: "phone_number2" }, void 0)] }), void 0), (0, jsx_runtime_1.jsx)(material_1.Divider, {}, void 0), (0, jsx_runtime_1.jsxs)(material_1.Box, Object.assign({ mt: 2, width: 430 }, { children: [(0, jsx_runtime_1.jsx)(app_1.TextInput, { source: "background", multiline: true, fullWidth: true }, void 0), (0, jsx_runtime_1.jsx)(app_1.TextInput, { source: "avatar", fullWidth: true }, void 0), (0, jsx_runtime_1.jsx)(app_1.BooleanInput, { source: "has_newsletter" }, void 0)] }), void 0)] }), void 0)] }), void 0) }, void 0) }, void 0), (0, jsx_runtime_1.jsx)(app_1.Toolbar, Object.assign({}, formProps), void 0)] }, void 0)) }, void 0) }), void 0) }), void 0));
};
