"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const app_1 = require("../../app");
const material_1 = require("@mui/material");
const Aside_1 = __importDefault(require("./Aside"));
const FullNameField_1 = __importDefault(require("./FullNameField"));
const SegmentsInput_1 = __importDefault(require("./SegmentsInput"));
const VisitorCreate_1 = require("./VisitorCreate");
const VisitorEdit = (props) => {
    return ((0, jsx_runtime_1.jsx)(app_1.Edit, Object.assign({ title: (0, jsx_runtime_1.jsx)(VisitorTitle, {}, void 0), aside: (0, jsx_runtime_1.jsx)(Aside_1.default, {}, void 0), component: "div" }, props, { children: (0, jsx_runtime_1.jsx)(VisitorForm, {}, void 0) }), void 0));
};
const VisitorTitle = ({ record }) => record ? (0, jsx_runtime_1.jsx)(FullNameField_1.default, { record: record, size: "32" }, void 0) : null;
const VisitorForm = (props) => {
    const translate = (0, app_1.useTranslate)();
    return ((0, jsx_runtime_1.jsx)(app_1.FormWithRedirect, Object.assign({}, props, { validate: VisitorCreate_1.validatePasswords, render: (formProps) => ((0, jsx_runtime_1.jsx)(material_1.Card, { children: (0, jsx_runtime_1.jsxs)("form", { children: [(0, jsx_runtime_1.jsx)(material_1.CardContent, { children: (0, jsx_runtime_1.jsxs)(material_1.Box, Object.assign({ display: { md: 'block', lg: 'flex' } }, { children: [(0, jsx_runtime_1.jsxs)(material_1.Box, Object.assign({ flex: 2, mr: { md: 0, lg: '1em' } }, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, Object.assign({ variant: "h6", gutterBottom: true }, { children: translate('resources.customers.fieldGroups.identity') }), void 0), (0, jsx_runtime_1.jsxs)(material_1.Box, Object.assign({ display: { xs: 'block', sm: 'flex' } }, { children: [(0, jsx_runtime_1.jsx)(material_1.Box, Object.assign({ flex: 1, mr: { xs: 0, sm: '0.5em' } }, { children: (0, jsx_runtime_1.jsx)(app_1.TextInput, { source: "first_name", resource: "customers", validate: requiredValidate, fullWidth: true }, void 0) }), void 0), (0, jsx_runtime_1.jsx)(material_1.Box, Object.assign({ flex: 1, ml: { xs: 0, sm: '0.5em' } }, { children: (0, jsx_runtime_1.jsx)(app_1.TextInput, { source: "last_name", resource: "customers", validate: requiredValidate, fullWidth: true }, void 0) }), void 0)] }), void 0), (0, jsx_runtime_1.jsx)(app_1.TextInput, { type: "email", source: "email", resource: "customers", validate: [(0, app_1.email)(), (0, app_1.required)()], fullWidth: true }, void 0), (0, jsx_runtime_1.jsxs)(material_1.Box, Object.assign({ display: { xs: 'block', sm: 'flex' } }, { children: [(0, jsx_runtime_1.jsx)(material_1.Box, Object.assign({ flex: 1, mr: { xs: 0, sm: '0.5em' } }, { children: (0, jsx_runtime_1.jsx)(app_1.DateInput, { source: "birthday", resource: "customers", fullWidth: true, helperText: false }, void 0) }), void 0), (0, jsx_runtime_1.jsx)(material_1.Box, { flex: 2, ml: { xs: 0, sm: '0.5em' } }, void 0)] }), void 0), (0, jsx_runtime_1.jsx)(material_1.Box, { mt: "1em" }, void 0), (0, jsx_runtime_1.jsx)(material_1.Typography, Object.assign({ variant: "h6", gutterBottom: true }, { children: translate('resources.customers.fieldGroups.address') }), void 0), (0, jsx_runtime_1.jsx)(app_1.TextInput, { source: "address", resource: "customers", multiline: true, fullWidth: true, helperText: false }, void 0), (0, jsx_runtime_1.jsxs)(material_1.Box, Object.assign({ display: { xs: 'block', sm: 'flex' } }, { children: [(0, jsx_runtime_1.jsx)(material_1.Box, Object.assign({ flex: 2, mr: { xs: 0, sm: '0.5em' } }, { children: (0, jsx_runtime_1.jsx)(app_1.TextInput, { source: "city", resource: "customers", fullWidth: true, helperText: false }, void 0) }), void 0), (0, jsx_runtime_1.jsx)(material_1.Box, Object.assign({ flex: 1, mr: { xs: 0, sm: '0.5em' } }, { children: (0, jsx_runtime_1.jsx)(app_1.TextInput, { source: "stateAbbr", resource: "customers", fullWidth: true, helperText: false }, void 0) }), void 0), (0, jsx_runtime_1.jsx)(material_1.Box, Object.assign({ flex: 2 }, { children: (0, jsx_runtime_1.jsx)(app_1.TextInput, { source: "zipcode", resource: "customers", fullWidth: true, helperText: false }, void 0) }), void 0)] }), void 0), (0, jsx_runtime_1.jsx)(material_1.Box, { mt: "1em" }, void 0), (0, jsx_runtime_1.jsx)(material_1.Typography, Object.assign({ variant: "h6", gutterBottom: true }, { children: translate('resources.customers.fieldGroups.change_password') }), void 0), (0, jsx_runtime_1.jsxs)(material_1.Box, Object.assign({ display: { xs: 'block', sm: 'flex' } }, { children: [(0, jsx_runtime_1.jsx)(material_1.Box, Object.assign({ flex: 1, mr: { xs: 0, sm: '0.5em' } }, { children: (0, jsx_runtime_1.jsx)(app_1.PasswordInput, { source: "password", resource: "customers", fullWidth: true }, void 0) }), void 0), (0, jsx_runtime_1.jsx)(material_1.Box, Object.assign({ flex: 1, ml: { xs: 0, sm: '0.5em' } }, { children: (0, jsx_runtime_1.jsx)(app_1.PasswordInput, { source: "confirm_password", resource: "customers", fullWidth: true }, void 0) }), void 0)] }), void 0)] }), void 0), (0, jsx_runtime_1.jsxs)(material_1.Box, Object.assign({ flex: 1, ml: { xs: 0, lg: '1em' }, mt: { xs: '1em', lg: 0 } }, { children: [(0, jsx_runtime_1.jsx)(material_1.Typography, Object.assign({ variant: "h6", gutterBottom: true }, { children: translate('resources.customers.fieldGroups.stats') }), void 0), (0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)(SegmentsInput_1.default, { fullWidth: true }, void 0) }, void 0), (0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsx)(app_1.NullableBooleanInput, { source: "has_newsletter", resource: "customers" }, void 0) }, void 0)] }), void 0)] }), void 0) }, void 0), (0, jsx_runtime_1.jsx)(app_1.Toolbar, { record: formProps.record, basePath: formProps.basePath, undoable: true, invalid: formProps.invalid, handleSubmit: formProps.handleSubmit, saving: formProps.saving, resource: "customers" }, void 0)] }, void 0) }, void 0)) }), void 0));
};
const requiredValidate = [(0, app_1.required)()];
exports.default = VisitorEdit;
